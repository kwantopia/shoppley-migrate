== Download ==

Prerequisites: Python 2.7

# Install spatialite for local testing and dev
$ sudo port install spatialite # mac
$ sudo apt-get install sptialite-bin libspatialite2 libspatialite-dev


#Install latest virtualenv
$ sudo pip install virtualenv
$ sudo pip install virtualenvwrapper

# For Linux create a virtual environment environment
# home directory for you virtual environments, I just named it virtual 
$ mkdir /home/virtual
# For MAC (if you develop in workspace directory use below, if you develop
# on Documents directory use the second line
$ mkdir ~/workspace/virtual 
$ mkdir ~/Documents/virtual

# For MAC with macports: 
$ /opt/local/bin/virtualenv-2.7 shoppley-env 
# For Linux DEV or DEPLOYMENT
$ /usr/local/bin/virtualenv shoppley-env

# For MAC
$ source ~/Document/virtual/shoppley-env/bin/activate
# For DEV or DEPLOYMENT
$ source /home/virtual/shoppley-env/bin/activate

# go to where you have checked out the shoppley code
# DEPLOYMENT 
$ cd /home/www/shoppley.com/shoppley 
# DEV SERVER
$ cd /home/www/webuy.mit.edu/shoppley 

# install requirements by running bootstrap.py
#$ pip install Django (will install 1.3 the latest)
#$ pip install Pinax (will install the latest 0.9)
#$ pip install -r requirements/apps.txt
./bootstrap.py

== Dev server ==
# If you are on dev server create a softlink to easily access the project
# from your home directory after logging in

ln -s /home/www/webuy.mit.edu/shoppley shoppley

== patches ==

# patches account/openid_consumer.py PinaxConsumer to have a __name__ attribute
# patches profiles and microblogging apps in pinax to take e-mail as part of url

$ cd patches
# modify patch.sh to point to your PINAX_HOME, and necessary directories
$ vi patch.sh
$ ./patch.sh

== external packaage ==

You need to download blueprint css, tipsy

$ cd packages
$ ./download.sh


== create POSTGIS template ==
$ sudo port install postgresql90 postgresql90-server
# setup postgresql90 defaultdb according to the instructions displayed after port install
$ sudo port install geos proj postgis gdal libgeoip

$ sudo su postgres
$ ./create_template_postgis-1.5.sh
# on Mac you might have permission issues so copy the script to tmp and execute

$ cp create_template_postgis-1.5.sh /tmp/
$ chmod 777 /tmp/create_template_postgis-1.5.sh
$ sudo su postgres
$ /tmp/create_template_postgis-1.5.sh

== create new DB with POSTGIS template ==
$ sudo su postgres
$ createuser flashon
$ psql -d template1
$ template1 => ALTER USER flashon WITH ENCRYPTED PASSWORD 'flashonnohsalf';
$ template1 => ALTER ROLE flashon WITH CREATEDB;
$ template1 => \q
$ createdb flashon -T template_postgis -E unicode -O flashon
exit

== syncdb ==

$ python manage.py syncdb

Due to Postgis the local django will only work with postgresql90 install and postgis related tools

== Celeryd setup ==
#Create rabbitmq user and vhost
sudo rabbitmqctl add_user shoppley_rabbit shoppley_rabbit
sudo rabbitmqctl add_vhost shoppley_vhost
sudo rabbitmqctl set_permissions -p shoppley_vhost shoppley_rabbit ".*" ".*" ".*"

# in settings.py add these
# set django-celery autoloader 

import djcelery
djcelery.setup_loader()

# set information to connect to rabbitmq (broker) 

BROKER_HOST = "127.0.0.1"
BROKER_PORT = 5672
BROKER_VHOST = "shoppley_vhost"
BROKER_USER = "shoppley_rabbit"
BROKER_PASSWORD = "shoppley_rabbit"


#Run celeryd as daemon
# read celeryd.default if u need to change the DIR
ln -s /home/www/shoppley.com/shoppley/celeryd.default /etc/default/celeryd
ln -s /home/www/shoppley.com/shoppley/celeryd /etc/init.d/celeryd
ln -s /home/www/shoppley.com/shoppley/celerybeat /etc/init.d/celerybeat
ln -s /home/www/shoppley.com/shoppley/celeryevcam /etc/init.d

sudo /etc/init.d/rabbitmq-server restart
sudo /etc/init.d/celeryd start
sudo /etc/init.d/celerybeat start


== test data ==

# Updated by Kwan 
# - creates user1, user2, user3@customer.com, user1, user2@merchant.com
# - password hello
# - creates some sample offers
python manage.py test_offer_mobile

To add more test data edit apps/mobile/tests.py "setUp" method


== DEPLOYMENT ==

source /home/virtual/shoppley-env/bin/activate
cd /home/www/shoppley.com/shoppley
# this django command is used to assemble static files (part of django 1.3)
python manage.py collectstatic 
cp deploy_settings.py.sample local_settings.py
cp apps/googlevoice/gvoice.production apps/googlevoice/gvoice


== To Cleanup DB and start scratch ==

sudo su postgres
dropdb flashon
createdb flashon -T template_postgis -E unicode -O flashon
python manage.py syncdb
python manage.py test_offer_mobile # to create sample users and test offers
